{"version":3,"sources":["components/CardList/Card/Card.module.css","components/CardList/CardList.module.css","components/SearchBox/SearchBox.module.css","components/CardList/Card/Card.js","components/CardList/CardList.js","components/SearchBox/SearchBox.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Card","props","className","classes","alt","src","monster","id","name","email","CardList","styles","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","useState","setMonsters","searchField","setSearchField","useEffect","fetch","then","response","json","users","filteredMonsters","filter","toLowerCase","includes","e","target","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8GACAA,EAAOC,QAAU,CAAC,KAAO,qB,gBCAzBD,EAAOC,QAAU,CAAC,SAAW,6B,gBCA7BD,EAAOC,QAAU,CAAC,UAAY,+B,uJCafC,EAXF,SAACC,GAAD,OACX,sBAAKC,UAAWC,IAAQH,KAAxB,UACE,qBACEI,IAAI,UACJC,IAAG,+BAA0BJ,EAAMK,QAAQC,GAAxC,eAEL,6BAAKN,EAAMK,QAAQE,OACnB,4BAAIP,EAAMK,QAAQG,Y,gBCIPC,EARE,SAACT,GAAD,OACf,qBAAKC,UAAWS,IAAOD,SAAvB,SACGT,EAAMW,SAASC,KAAI,SAACP,GAAD,OAClB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,U,wBCGVO,EATG,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OAChB,uBACEd,UAAWC,IAAQW,UACnBG,KAAK,SACLF,YAAaA,EACbG,SAAUF,KCwBCG,MA3Bf,WAAgB,IAAD,EACmBC,mBAAS,IAD5B,mBACNR,EADM,KACIS,EADJ,OAEyBD,mBAAS,IAFlC,mBAENE,EAFM,KAEOC,EAFP,KAIbC,qBAAU,WACRC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAWR,EAAYQ,QAC9B,CAACR,IAEJ,IAIMS,EAAmBlB,EAASmB,QAAO,SAACzB,GACxC,OAAOA,EAAQE,KAAKwB,cAAcC,SAASX,EAAYU,kBAGzD,OACE,sBAAK9B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAWa,YAAY,kBAAkBC,aAXxB,SAACkB,GACpBX,EAAeW,EAAEC,OAAOC,UAWtB,cAAC,EAAD,CAAUxB,SAAUkB,QCfXO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.126113d1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"Card_Card__nTpee\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CardList\":\"CardList_CardList__21TCb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchBox\":\"SearchBox_SearchBox__3I1MB\"};","import React from \"react\";\r\nimport classes from \"./Card.module.css\";\r\n\r\nconst Card = (props) => (\r\n  <div className={classes.Card}>\r\n    <img\r\n      alt=\"monster\"\r\n      src={`https://robohash.org/${props.monster.id}?set-set2`}\r\n    />\r\n    <h2>{props.monster.name}</h2>\r\n    <p>{props.monster.email}</p>\r\n  </div>\r\n);\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\n\r\nimport Card from \"./Card/Card\";\r\n\r\nimport styles from \"./CardList.module.css\";\r\n\r\nconst CardList = (props) => (\r\n  <div className={styles.CardList}>\r\n    {props.monsters.map((monster) => (\r\n      <Card key={monster.id} monster={monster} />\r\n    ))}\r\n  </div>\r\n);\r\n\r\nexport default CardList;\r\n","import React from \"react\";\r\nimport classes from \"./SearchBox.module.css\";\r\n\r\nconst SearchBox = ({ placeholder, handleChange }) => (\r\n  <input\r\n    className={classes.SearchBox}\r\n    type=\"search\"\r\n    placeholder={placeholder}\r\n    onChange={handleChange}\r\n  />\r\n);\r\n\r\nexport default SearchBox;\r\n","import React, { useState, useEffect } from \"react\";\nimport CardList from \"./components/CardList/CardList\";\nimport \"./App.css\";\nimport SearchBox from \"./components/SearchBox/SearchBox\";\n\nfunction App() {\n  const [monsters, setMonsters] = useState([]);\n  const [searchField, setSearchField] = useState(\"\");\n\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => setMonsters(users));\n  }, [setMonsters]);\n\n  const handleChange = (e) => {\n    setSearchField(e.target.value);\n  };\n\n  const filteredMonsters = monsters.filter((monster) => {\n    return monster.name.toLowerCase().includes(searchField.toLowerCase());\n  });\n\n  return (\n    <div className=\"App\">\n      <h1>Monsters Rolodex</h1>\n      <SearchBox placeholder=\"search monsters\" handleChange={handleChange} />\n      <CardList monsters={filteredMonsters} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}